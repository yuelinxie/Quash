==23533== Memcheck, a memory error detector
==23533== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==23533== Using Valgrind-3.17.0 and LibVEX; rerun with -h for copyright info
==23533== Command: /home/satazero/Desktop/EECS678/quash/quash
==23533== 
==24334== 
==24334== HEAP SUMMARY:
==24334==     in use at exit: 52 bytes in 2 blocks
==24334==   total heap usage: 9 allocs, 7 frees, 21,950 bytes allocated
==24334== 
==24334== LEAK SUMMARY:
==24334==    definitely lost: 0 bytes in 0 blocks
==24334==    indirectly lost: 0 bytes in 0 blocks
==24334==      possibly lost: 0 bytes in 0 blocks
==24334==    still reachable: 52 bytes in 2 blocks
==24334==         suppressed: 0 bytes in 0 blocks
==24334== Reachable blocks (those to which a pointer was found) are not shown.
==24334== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24334== 
==24334== For lists of detected and suppressed errors, rerun with: -s
==24334== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==24371== 
==24371== HEAP SUMMARY:
==24371==     in use at exit: 52 bytes in 2 blocks
==24371==   total heap usage: 17 allocs, 15 frees, 24,646 bytes allocated
==24371== 
==24371== LEAK SUMMARY:
==24371==    definitely lost: 0 bytes in 0 blocks
==24371==    indirectly lost: 0 bytes in 0 blocks
==24371==      possibly lost: 0 bytes in 0 blocks
==24371==    still reachable: 52 bytes in 2 blocks
==24371==         suppressed: 0 bytes in 0 blocks
==24371== Reachable blocks (those to which a pointer was found) are not shown.
==24371== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24371== 
==24371== For lists of detected and suppressed errors, rerun with: -s
==24371== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==24390== Invalid read of size 4
==24390==    at 0x48EE424: fileno (fileno.c:35)
==24390==    by 0x10D242: create_process (execute.c:346)
==24390==    by 0x10D51E: run_script (execute.c:401)
==24390==    by 0x10A938: main (quash.c:121)
==24390==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==24390== 
==24390== 
==24390== Process terminating with default action of signal 11 (SIGSEGV)
==24390==  Access not within mapped region at address 0x0
==24390==    at 0x48EE424: fileno (fileno.c:35)
==24390==    by 0x10D242: create_process (execute.c:346)
==24390==    by 0x10D51E: run_script (execute.c:401)
==24390==    by 0x10A938: main (quash.c:121)
==24390==  If you believe this happened as a result of a stack
==24390==  overflow in your program's main thread (unlikely but
==24390==  possible), you can try to increase the size of the
==24390==  main thread stack using the --main-stacksize= flag.
==24390==  The main thread stack size used in this run was 8388608.
==23533== 
==23533== HEAP SUMMARY:
==23533==     in use at exit: 48 bytes in 1 blocks
==23533==   total heap usage: 40 allocs, 39 frees, 30,150 bytes allocated
==23533== 
==23533== LEAK SUMMARY:
==23533==    definitely lost: 0 bytes in 0 blocks
==23533==    indirectly lost: 0 bytes in 0 blocks
==23533==      possibly lost: 0 bytes in 0 blocks
==23533==    still reachable: 48 bytes in 1 blocks
==23533==         suppressed: 0 bytes in 0 blocks
==23533== Reachable blocks (those to which a pointer was found) are not shown.
==23533== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==23533== 
==23533== For lists of detected and suppressed errors, rerun with: -s
==23533== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==24389== Invalid read of size 4
==24389==    at 0x48EE424: fileno (fileno.c:35)
==24389==    by 0x10D242: create_process (execute.c:346)
==24389==    by 0x10D51E: run_script (execute.c:401)
==24389==    by 0x10A938: main (quash.c:121)
==24389==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==24389== 
==24389== 
==24389== Process terminating with default action of signal 11 (SIGSEGV)
==24389==  Access not within mapped region at address 0x0
==24389==    at 0x48EE424: fileno (fileno.c:35)
==24389==    by 0x10D242: create_process (execute.c:346)
==24389==    by 0x10D51E: run_script (execute.c:401)
==24389==    by 0x10A938: main (quash.c:121)
==24389==  If you believe this happened as a result of a stack
==24389==  overflow in your program's main thread (unlikely but
==24389==  possible), you can try to increase the size of the
==24389==  main thread stack using the --main-stacksize= flag.
==24389==  The main thread stack size used in this run was 8388608.
==24368== 
==24368== HEAP SUMMARY:
==24368==     in use at exit: 52 bytes in 2 blocks
==24368==   total heap usage: 13 allocs, 11 frees, 23,298 bytes allocated
==24368== 
==24368== LEAK SUMMARY:
==24368==    definitely lost: 0 bytes in 0 blocks
==24368==    indirectly lost: 0 bytes in 0 blocks
==24368==      possibly lost: 0 bytes in 0 blocks
==24368==    still reachable: 52 bytes in 2 blocks
==24368==         suppressed: 0 bytes in 0 blocks
==24368== Reachable blocks (those to which a pointer was found) are not shown.
==24368== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==24368== 
==24368== For lists of detected and suppressed errors, rerun with: -s
==24368== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
